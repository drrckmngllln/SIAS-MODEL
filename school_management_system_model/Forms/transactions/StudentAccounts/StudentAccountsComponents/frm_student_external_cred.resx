<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABu
        BwAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEgBgABQCIAA1ABjFj/A9YB8gMNAREkAAMjATNI/wO6Aef/ACEAAwYBB2j/A2EBpiAA
        UP8DSQGA/wAdAHD/A10BohwAUP8D3gH1/wAZAAPJAe10/wMOARIUAAMXAR8Q/wNSAZEQ/wPmAfgDWwGf
        EP8DbQG1A7sB6BD//wAVAAMGAQd4/wPXAfMUAAMwAUoM/wOvAeMEAAM8AWMM/wMaASMEABD/CAAQ//8A
        FQADWQGbfP8UAANEAXQM/wOmAd8EAAM6AWAM/wMYASAEABD/CAAQ//8AFQADygHvfP8UAANZAZ4M/wOm
        Ad8EAAM6AWAM/wMYASAEABD/CAAQ//8AFQCA/xQAA4MByQz/A6YB3wQAAzoBYAz/AxgBIAQAEP8IABD/
        /wAVADz/CAADUQGPOP8UAAPXAfMM/wOmAd8EAAM6AWAM/wMYASAEABD/CAAQ//8AFQA8/wgAAxoBJDj/
        FAAQ/wOmAd8EAAM6AWAM/wMYASAEABD/CAAQ/wMWAR3/ABEAPP8IAAMaASQ4/xQAEP8DpgHfBAADOgFg
        DP8DGAEgBAAQ/wgAEP8DLgFH/wARADz/CAADGgEkOP8UABD/A6YB3wQAAzoBYAz/AxgBIAQAEP8IABD/
        A0MBcv8AEQA8/wgAAxoBJDj/FAAQ/wOmAd8EAAM6AWAM/wMYASAEABD/CAAQ/wNZAZz/ABEAPP8IAAMa
        ASQ4/xQAEP8DpgHfBAADOgFgDP8DGAEgBAAQ/wgAEP8DfwHG/wARACT/AzMBUgMtAUQDLQFEAy0BRAMt
        AUQDJgE4DAADLQFEAy0BRAMtAUQDLQFEAy0BRANXAZkg/xQAEP8DpgHfBAADOgFgDP8DGAEgBAAQ/wgA
        EP8D1AHx/wARACD/AxcBHzwAIP8QAAMVARwQ/wOmAd8EAAM6AWAM/wMYASAEABD/CAAU//8AEQAg/wNA
        AWw8ACD/EAADLgFGEP8DpgHfBAADOgFgDP8DGAEgBAAQ/wgAFP//ABEAOP8D5wH5CAADEgEXOP8QAANC
        AXEQ/wOvAeMEAAM8AWMM/wMaASMEABD/CAAU//8AEQA8/wgAAxoBJDj/EAADWQGbFP8DUgGQEP8D5AH3
        A1oBnRD/A20BtQO7AekU//8AEQA8/wgAAxoBJDj/EAADfQHFXP//ABEAPP8IAAMaASQ4/xAAAykBPgMt
        AUQDLQFEAy0BRAMtAUQDLQFEAy0BRAMtAUQDLQFEAy0BRAMtAUQDLQFEAy0BRAMtAUQDLQFEAy0BRAMt
        AUQDLQFEAy0BRAMtAUQDLQFEAy0BRAMtAUQDLQFE/wARADz/CAADGgEkOP//AIEAPP8IAAMjATI4/wgA
        Ay8BSANyAbsDcgG7A3IBuwNyAbsDcgG7A3IBuwNyAbsDcgG7A3IBuwNyAbsDcgG7A3IBuwNyAbsDcgG7
        A3IBuwNyAbsDcgG7A3IBuwNyAbsDcgG7A3IBuwNyAbsDcgG7A3IBuwNyAbsDcgG7A2cBr/8ACQA8/wM2
        AVYDAgEDA94B9Tj/CABw/wMXAR//AAUAA/AB/Hz/CABw/wMYASD/AAUAA44B0Hz/CABw/wMMAQ//AAUA
        AzIBT3z/CAADQwFzbP//AA0AeP8DUAGMDAADWAGaYP8D8AH8AwcBCf8ADQADQQFwdP8sAAMKAQ0E/wPC
        AesYAAMCAQME/wPkAff/ADEAA3oBwmz/AwYBCDAACP8DBQEGFAADdgG+BP8DNwFa/wA1AANBAXBg/wPK
        Ae84AANAAWwk//8AQQADMQFNA4wBzwP5Af5E/wPJAe0DWQGcAwYBCEAAAykBPQOvAeIU/wNqAbL/ADEA
        AUIBTQE+BwABPgMAASgDAAGAAwABIAMAAQEBAAEBBgABAhYAA/8BAAHwAgABBwH8AgABPwgAAcACAAED
        AfwCAAEfCAABwAIAAQEB/AIAAR8IAAGAAwAB+AIAAR8MAAH4ASABhgEfDAAB+AEgAYYBHwwAAfgBIAGG
        AR8MAAH4ASABhgEfCQABAQGAAQAB+AEgAYYBHwkAAQEBgAEAAfgBIAGGAQ8JAAEBAYABAAH4ASABhgEP
        CQABAQGAAQAB+AEgAYYBDwkAAQEBgAEAAfgBIAGGAQ8JAAEBAYABAAH4ASABhgEPCQABAQHAAQAB+AEg
        AYYBDwkAAX8B/wEAAfABIAGGAQ8JAAF/Af8BAAHwASABhgEPCQABAQGAAQAB8AEgAYYBDwkAAQEBgAEA
        AfACAAEPCQABAQGAAQAB8AIAAQ8JAAEBAYABAAHwAgABDwkAAQEBgAEABP8JAAEBAYABAAHAAgABAwwA
        AcACAAEBDAABwAIAAQEMAAHAAgABAQwAAcACAAEDCAABgAMAAeACAAEDCAABgAIAAQEB/wHHAeMB/wgA
        AcACAAEBAf8C4wH/CAAB4AIAAQcB/wHgAQcB/wgAAfgCAAEPAf8B8AEPAf8IAAs=
</value>
  </data>
</root>